@import xqt.adapters.builtin.*
@import com.vaiona.commons.data.*;
@import com.vaiona.commons.types.*;

@args() {
    String namespace,
    String BaseClassName,
    String RecordClassName,
    String EntityClassName,
    String ReaderClassName,
    List<AttributeInfo> Attributes,
    List<AttributeInfo> Pre,
    List<AttributeInfo> Mid,
    List<AttributeInfo> Post,
    List<AttributeInfo> Post_Left,
    List<AttributeInfo> Post_Right
}

package @(namespace);

import java.text.SimpleDateFormat;
import java.util.Date;
import xqt.model.functions.*;
import xqt.model.functions.aggregates.*;

public class @(EntityClassName) {

    @if(Attributes != null && Attributes.size() > 0){
        @for(AttributeInfo ad : Attributes) {
            public @ad.runtimeType @ad.name;
        }
    }
    public boolean isValid = true; @//set it to false if the object is not valid for any reason    
    
    public @(EntityClassName) (@(RecordClassName) record){
        @if(Pre != null && Pre.size() > 0){ 
            try {
                @for(AttributeInfo ad : Pre) {
                    @ad.name = @ad.forwardMapTranslated;
                }
            } catch (Exception ex) {
                isValid = false;
            }
        }

        @if(Mid != null && Mid.size() > 0){ 
            try {
                @for(AttributeInfo ad : Mid) {
                    @ad.name = @ad.forwardMapTranslated;
                }
            } catch (Exception ex) {
                isValid = false;
            }
        }

        @if(Post != null && Post.size() > 0){
            try {
                @for(AttributeInfo ad : Post) {
                    @ad.name = @ad.forwardMapTranslated;
                }
            } catch (Exception ex) {
                isValid = false;
            }
        }
        @*
        @if(Post_Left != null && Post_Left.size() > 0){
            try {
                @for(AttributeInfo ad : Post_Left) {
                    @ad.name = @ad.forwardMapTranslated;
                }
            } catch (Exception ex) {
                isValid = false;
            }
        }

        @if(Post_Right != null && Post_Right.size() > 0){
            try {
                @for(AttributeInfo ad : Post_Right) {
                    @ad.name = @ad.forwardMapTranslated;
                }
            } catch (Exception ex) {
                isValid = false;
            }
        }
        *@
    }
}

